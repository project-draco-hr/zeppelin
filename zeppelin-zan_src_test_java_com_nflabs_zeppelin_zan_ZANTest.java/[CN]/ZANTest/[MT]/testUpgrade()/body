{
  String localBase=tmpDir.getAbsolutePath() + "/local";
  String remoteBase=tmpDir.getAbsolutePath() + "/remote";
  ZAN zan=new ZAN("file://" + zanrepoDir.getAbsolutePath(),localBase,remoteBase,dfs);
  zan.update();
  git=Git.open(lib1repoDir);
  FileUtils.writeStringToFile(new File(lib1repoDir,"res"),"res");
  git.add().addFilepattern("res").call();
  RevCommit cm=git.commit().setMessage("add resources").call();
  git.push();
  assertEquals(Info.Status.UNINSTALLED,zan.info("lib1").getStatus());
  zan.install("lib1",null);
  assertTrue(new File(localBase,"lib1").isDirectory());
  assertTrue(new File(localBase,"lib1/zql").isFile());
  assertFalse(new File(localBase,"lib1/res").isFile());
  assertEquals(Info.Status.INSTALLED,zan.info("lib1").getStatus());
  git=Git.open(new File(zanrepoDir.getAbsolutePath() + "/lib1"));
  git.pull().call();
  git=Git.open(zanrepoDir);
  git.commit().setAll(true).setMessage("update lib1 commit").call();
  git.push();
  zan.update();
  assertEquals(Info.Status.UPDATEAVAILABLE,zan.info("lib1").getStatus());
  zan.upgrade("lib1",null);
  assertEquals(Info.Status.INSTALLED,zan.info("lib1").getStatus());
  assertTrue(new File(localBase,"lib1").isDirectory());
  assertTrue(new File(localBase,"lib1/zql").isFile());
  assertTrue(new File(localBase,"lib1/res").isFile());
}
