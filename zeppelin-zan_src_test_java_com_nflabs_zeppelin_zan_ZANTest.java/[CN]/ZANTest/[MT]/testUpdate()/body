{
  String localBase=tmpDir.getAbsolutePath() + "/local";
  String remoteBase=tmpDir.getAbsolutePath() + "/remote";
  ZAN zan=new ZAN("file://" + zanrepoDir.getAbsolutePath(),localBase,remoteBase,dfs);
  zan.update();
  assertTrue(new File(localBase + "/.gitmodules").isFile());
  String gitmodules=FileUtils.readFileToString(new File(localBase + "/.gitmodules"));
  File lib3repoDir=new File(tmpDir.getAbsolutePath() + "/pub/lib3repo");
  FileRepositoryBuilder builder=new FileRepositoryBuilder();
  Repository repo=builder.setGitDir(new File(lib3repoDir,".git")).build();
  repo.create();
  repo.close();
  git=Git.open(lib3repoDir);
  FileUtils.writeStringToFile(new File(lib3repoDir,"zql"),"select * from table3");
  git.add().addFilepattern("zql").call();
  RevCommit cm2=git.commit().setMessage("add zql").call();
  git.push();
  git=Git.open(zanrepoDir);
  SubmoduleAddCommand submoduleAdd=git.submoduleAdd();
  submoduleAdd.setPath("lib3");
  submoduleAdd.setURI(lib3repoDir.toURI().toString());
  submoduleAdd.call();
  git.commit().setMessage("lib3 commit").call();
  git.push();
  zan.update(null);
  assertTrue(gitmodules.compareTo(FileUtils.readFileToString(new File(localBase + "/.gitmodules"))) != 0);
}
