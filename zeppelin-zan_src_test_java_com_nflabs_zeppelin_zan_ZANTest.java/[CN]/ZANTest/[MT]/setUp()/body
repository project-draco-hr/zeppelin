{
  tmpDir=new File(System.getProperty("java.io.tmpdir") + "/ZANTest_" + System.currentTimeMillis());
  tmpDir.mkdir();
  dfs=FileSystem.get(new org.apache.hadoop.conf.Configuration());
  zanrepoDir=new File(tmpDir.getAbsolutePath() + "/local/zanrepo");
  FileRepositoryBuilder builder=new FileRepositoryBuilder();
  FileRepository repo=builder.setGitDir(new File(zanrepoDir,".git")).build();
  repo.create();
  repo.close();
  lib1repoDir=new File(tmpDir.getAbsolutePath() + "/local/lib1repo");
  builder=new FileRepositoryBuilder();
  repo=builder.setGitDir(new File(lib1repoDir,".git")).build();
  repo.create();
  repo.close();
  git=Git.open(lib1repoDir);
  FileUtils.writeStringToFile(new File(lib1repoDir,"zql"),"select * from table1");
  git.add().addFilepattern("zql").call();
  RevCommit cm1=git.commit().setMessage("add zql").call();
  git.push();
  lib2repoDir=new File(tmpDir.getAbsolutePath() + "/local/lib2repo");
  builder=new FileRepositoryBuilder();
  repo=builder.setGitDir(new File(lib2repoDir,".git")).build();
  repo.create();
  repo.close();
  git=Git.open(lib2repoDir);
  FileUtils.writeStringToFile(new File(lib2repoDir,"zql"),"select * from table2");
  git.add().addFilepattern("zql").call();
  RevCommit cm2=git.commit().setMessage("add zql").call();
  git.push();
  git=Git.open(zanrepoDir);
  File lib1Dir=new File(zanrepoDir,"lib1");
  lib1Dir.mkdir();
  new Meta("file://" + lib1repoDir.getAbsolutePath(),"master",cm1.getName()).write(new File(lib1Dir,"meta"));
  git.add().addFilepattern("lib1").call();
  RevCommit rc=git.commit().setMessage("lib1 commit").call();
  git.push();
  File lib2Dir=new File(zanrepoDir,"lib2");
  lib2Dir.mkdir();
  new Meta("file://" + lib2repoDir.getAbsolutePath(),"master",cm2.getName()).write(new File(lib2Dir,"meta"));
  git.add().addFilepattern("lib2").call();
  git.commit().setMessage("lib2 commit").call();
  git.push();
}
