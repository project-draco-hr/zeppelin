{
  tmpDir=new File(System.getProperty("java.io.tmpdir") + "/ZANTest_" + System.currentTimeMillis());
  tmpDir.mkdir();
  dfs=FileSystem.get(new org.apache.hadoop.conf.Configuration());
  zanrepoDir=new File(tmpDir.getAbsolutePath() + "/pub/zanrepo");
  FileRepositoryBuilder builder=new FileRepositoryBuilder();
  Repository repo=builder.setGitDir(new File(zanrepoDir,".git")).build();
  repo.create();
  repo.close();
  lib1repoDir=new File(tmpDir.getAbsolutePath() + "/pub/lib1repo");
  builder=new FileRepositoryBuilder();
  repo=builder.setGitDir(new File(lib1repoDir,".git")).build();
  repo.create();
  repo.close();
  git=Git.open(lib1repoDir);
  FileUtils.writeStringToFile(new File(lib1repoDir,"zql"),"select * from table1");
  git.add().addFilepattern("zql").call();
  RevCommit cm1=git.commit().setMessage("add zql").call();
  git.push();
  lib2repoDir=new File(tmpDir.getAbsolutePath() + "/pub/lib2repo");
  builder=new FileRepositoryBuilder();
  repo=builder.setGitDir(new File(lib2repoDir,".git")).build();
  repo.create();
  repo.close();
  git=Git.open(lib2repoDir);
  FileUtils.writeStringToFile(new File(lib2repoDir,"zql"),"select * from table2");
  git.add().addFilepattern("zql").call();
  RevCommit cm2=git.commit().setMessage("add zql").call();
  git.push();
  git=Git.open(zanrepoDir);
  SubmoduleAddCommand submoduleAdd=git.submoduleAdd();
  submoduleAdd.setPath("lib1");
  submoduleAdd.setURI(lib1repoDir.toURI().toString());
  submoduleAdd.call();
  git.commit().setMessage("lib1 commit").call();
  git.push();
  submoduleAdd=git.submoduleAdd();
  submoduleAdd.setPath("lib2");
  submoduleAdd.setURI(lib2repoDir.toURI().toString());
  submoduleAdd.call();
  git.commit().setMessage("lib2 commit").call();
  git.push();
}
