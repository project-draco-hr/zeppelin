{
  File notebookDir=new File(conf.getNotebookDir());
  File[] dirs=notebookDir.listFiles();
  if (dirs == null) {
    return;
  }
  Map<String,SnapshotAngularObject> angularObjectSnapshot=new HashMap<String,SnapshotAngularObject>();
  for (  File f : dirs) {
    boolean isHidden=f.getName().startsWith(".");
    if (f.isDirectory() && !isHidden) {
      Scheduler scheduler=schedulerFactory.createOrGetFIFOScheduler("note_" + System.currentTimeMillis());
      logger.info("Loading note from " + f.getName());
      NoteInterpreterLoader noteInterpreterLoader=new NoteInterpreterLoader(replFactory);
      Note note=Note.load(f.getName(),conf,noteInterpreterLoader,scheduler,jobListenerFactory,quartzSched);
      noteInterpreterLoader.setNoteId(note.id());
      Date lastUpdatedDate=new Date(0);
      for (      Paragraph p : note.getParagraphs()) {
        if (p.getDateFinished() != null && lastUpdatedDate.before(p.getDateFinished())) {
          lastUpdatedDate=p.getDateFinished();
        }
      }
      Map<String,List<AngularObject>> savedObjects=note.getAngularObjects();
      if (savedObjects != null) {
        for (        String intpGroupName : savedObjects.keySet()) {
          List<AngularObject> objectList=savedObjects.get(intpGroupName);
          for (          AngularObject savedObject : objectList) {
            SnapshotAngularObject snapshot=angularObjectSnapshot.get(savedObject.getName());
            if (snapshot == null || snapshot.getLastUpdate().before(lastUpdatedDate)) {
              angularObjectSnapshot.put(savedObject.getName(),new SnapshotAngularObject(intpGroupName,savedObject,lastUpdatedDate));
            }
          }
        }
      }
synchronized (notes) {
        notes.put(note.id(),note);
        refreshCron(note.id());
      }
    }
  }
  for (  String name : angularObjectSnapshot.keySet()) {
    SnapshotAngularObject snapshot=angularObjectSnapshot.get(name);
    List<InterpreterSetting> settings=replFactory.get();
    for (    InterpreterSetting setting : settings) {
      InterpreterGroup intpGroup=setting.getInterpreterGroup();
      if (intpGroup.getId().equals(snapshot.getIntpGroupId())) {
        AngularObjectRegistry registry=intpGroup.getAngularObjectRegistry();
        if (registry.get(name) == null) {
          registry.add(name,snapshot.getAngularObject().get(),false);
        }
      }
    }
  }
}
