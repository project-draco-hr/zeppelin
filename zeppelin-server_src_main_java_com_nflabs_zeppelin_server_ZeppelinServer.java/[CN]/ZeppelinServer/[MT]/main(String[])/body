{
  ZeppelinConfiguration conf=ZeppelinConfiguration.create();
  int port=conf.getInt(ConfVars.ZEPPELIN_PORT);
  int timeout=1000 * 30;
  final Server server=new Server();
  SocketConnector connector=new SocketConnector();
  connector.setMaxIdleTime(timeout);
  connector.setSoLingerTime(-1);
  connector.setPort(port);
  server.addConnector(connector);
  final ServletHolder cxfServletHolder=new ServletHolder(new CXFNonSpringJaxrsServlet());
  cxfServletHolder.setInitParameter("javax.ws.rs.Application",ZeppelinServer.class.getName());
  cxfServletHolder.setName("rest");
  cxfServletHolder.setForcedPath("rest");
  final ServletContextHandler cxfContext=new ServletContextHandler();
  cxfContext.setSessionHandler(new SessionHandler());
  cxfContext.setContextPath("/cxf");
  cxfContext.addServlet(cxfServletHolder,"/zeppelin/*");
  WebAppContext sch=new WebAppContext();
  sch.setParentLoaderPriority(true);
  File resourcePath=new File(conf.getString(ConfVars.ZEPPELIN_WAR));
  if (resourcePath.isDirectory()) {
    System.setProperty("wicket.configuration","development");
    ServletHolder wicketServletHolder=new ServletHolder(WicketServlet.class);
    wicketServletHolder.setInitParameter(ContextParamWebApplicationFactory.APP_CLASS_PARAM,"com.nflabs.zeppelin.web.WicketApplication");
    wicketServletHolder.setInitParameter(WicketFilter.FILTER_MAPPING_PARAM,"/*");
    sch.setWar(resourcePath.getAbsolutePath());
    sch.addServlet(wicketServletHolder,"/");
  }
 else {
    sch.setWar(resourcePath.getAbsolutePath());
  }
  ContextHandlerCollection contexts=new ContextHandlerCollection();
  contexts.setHandlers(new Handler[]{cxfContext,sch});
  server.setHandler(contexts);
  logger.info("Start zeppelin server");
  server.start();
  logger.info("Started");
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      logger.info("Shutting down Zeppelin Server ... ");
      try {
        server.stop();
      }
 catch (      Exception e) {
        logger.error("Error while stopping servlet container",e);
      }
      logger.info("Bye");
    }
  }
);
  while (true) {
    Thread.sleep(10000);
  }
}
