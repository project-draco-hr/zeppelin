{
  repl.interpret("case class Test(name:String, age:Int)");
  repl.interpret("val test = sc.parallelize(Seq(Test(\"moon\", 33), Test(\"jobs\", 51), Test(\"gates\", 51), Test(\"park\", 34)))");
  repl.interpret("test.registerAsTable(\"test\")");
  InterpreterResult ret=sql.interpret("select name, age from test where age < 40");
  assertEquals(InterpreterResult.Code.SUCCESS,ret.code());
  assertEquals(Type.TABLE,ret.type());
  assertEquals("name\tage\nmoon\t33\npark\t34\n",ret.message());
  assertEquals(InterpreterResult.Code.ERROR,sql.interpret("select wrong syntax").code());
  assertEquals(InterpreterResult.Code.ERROR,sql.interpret("select case when name==\"aa\" then name else name end from people").code());
}
