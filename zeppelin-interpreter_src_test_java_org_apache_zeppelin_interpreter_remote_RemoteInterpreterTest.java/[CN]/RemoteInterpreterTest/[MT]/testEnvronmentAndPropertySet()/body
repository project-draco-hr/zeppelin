{
  Properties p=new Properties();
  p.setProperty("MY_ENV1","env value 1");
  p.setProperty("my.property.1","property value 1");
  RemoteInterpreter intp=new RemoteInterpreter(p,"note",MockInterpreterEnv.class.getName(),new File(INTERPRETER_SCRIPT).getAbsolutePath(),"fake","fakeRepo",env,10 * 1000,null,null);
  intpGroup.put("note",new LinkedList<Interpreter>());
  intpGroup.get("note").add(intp);
  intp.setInterpreterGroup(intpGroup);
  intp.open();
  InterpreterContext context=new InterpreterContext("noteId","id","title","text",new AuthenticationInfo(),new HashMap<String,Object>(),new GUI(),new AngularObjectRegistry(intpGroup.getId(),null),new LocalResourcePool("pool1"),new LinkedList<InterpreterContextRunner>(),null);
  assertEquals("env value 1",intp.interpret("getEnv MY_ENV1",context).message());
  assertEquals("",intp.interpret("getProperty MY_ENV1",context).message());
  assertEquals("",intp.interpret("getEnv my.property.1",context).message());
  assertEquals("property value 1",intp.interpret("getProperty my.property.1",context).message());
  intp.close();
}
