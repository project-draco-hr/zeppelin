{
  final String paragraphId=(String)fromMessage.get("id");
  if (paragraphId == null) {
    return;
  }
  String noteId=getOpenNoteId(conn);
  final Note note=notebook.getNote(noteId);
  NotebookAuthorization notebookAuthorization=notebook.getNotebookAuthorization();
  if (!notebookAuthorization.isWriter(noteId,userAndRoles)) {
    permissionError(conn,"write",fromMessage.principal,userAndRoles,notebookAuthorization.getWriters(noteId));
    return;
  }
  Paragraph p=note.getParagraph(paragraphId);
  String text=(String)fromMessage.get("paragraph");
  p.setText(text);
  p.setTitle((String)fromMessage.get("title"));
  if (!fromMessage.principal.equals("anonymous")) {
    AuthenticationInfo authenticationInfo=new AuthenticationInfo(fromMessage.principal,fromMessage.ticket);
    p.setAuthenticationInfo(authenticationInfo);
  }
 else {
    p.setAuthenticationInfo(new AuthenticationInfo());
  }
  Map<String,Object> params=(Map<String,Object>)fromMessage.get("params");
  p.settings.setParams(params);
  Map<String,Object> config=(Map<String,Object>)fromMessage.get("config");
  p.setConfig(config);
  boolean isTheLastParagraph=note.getLastParagraph().getId().equals(p.getId());
  if (!Strings.isNullOrEmpty(text) && isTheLastParagraph) {
    note.addParagraph();
  }
  AuthenticationInfo subject=new AuthenticationInfo(fromMessage.principal);
  note.persist(subject);
  try {
    note.run(paragraphId);
  }
 catch (  Exception ex) {
    LOG.error("Exception from run",ex);
    if (p != null) {
      p.setReturn(new InterpreterResult(InterpreterResult.Code.ERROR,ex.getMessage()),ex);
      p.setStatus(Status.ERROR);
      broadcast(note.id(),new Message(OP.PARAGRAPH).put("paragraph",p));
    }
  }
}
