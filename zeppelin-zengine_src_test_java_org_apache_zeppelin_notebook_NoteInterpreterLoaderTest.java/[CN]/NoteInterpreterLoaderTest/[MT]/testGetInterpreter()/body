{
  NoteInterpreterLoader loader=new NoteInterpreterLoader(factory);
  loader.setNoteId("note");
  loader.setInterpreters(factory.getDefaultInterpreterSettingList());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter1",loader.get(null).getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter1",loader.get("").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter1",loader.get(" ").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter11",loader.get("mock11").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter1",loader.get("group1").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter2",loader.get("group2").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter1",loader.get("group1.mock1").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter11",loader.get("group1.mock11").getClassName());
  assertEquals("org.apache.zeppelin.interpreter.mock.MockInterpreter2",loader.get("group2.mock2").getClassName());
}
