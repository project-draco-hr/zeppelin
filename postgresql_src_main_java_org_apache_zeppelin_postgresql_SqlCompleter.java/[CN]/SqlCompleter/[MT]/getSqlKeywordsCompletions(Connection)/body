{
  String keywords=new BufferedReader(new InputStreamReader(SqlCompleter.class.getResourceAsStream("/ansi.sql.keywords"))).readLine();
  DatabaseMetaData metaData=connection.getMetaData();
  String driverSpecificKeywords="/" + metaData.getDriverName().replace(" ","-").toLowerCase() + "-sql.keywords";
  logger.info("JDBC DriverName:" + driverSpecificKeywords);
  if (SqlCompleter.class.getResource(driverSpecificKeywords) != null) {
    String driverKeywords=new BufferedReader(new InputStreamReader(SqlCompleter.class.getResourceAsStream(driverSpecificKeywords))).readLine();
    keywords+="," + driverKeywords.toUpperCase();
  }
  Set<String> completions=new TreeSet<String>();
  try {
    keywords+="," + metaData.getSQLKeywords();
  }
 catch (  Exception e) {
    logger.debug("fail to get SQL key words from database metadata: " + e,e);
  }
  try {
    keywords+="," + metaData.getStringFunctions();
  }
 catch (  Exception e) {
    logger.debug("fail to get string function names from database metadata: " + e,e);
  }
  try {
    keywords+="," + metaData.getNumericFunctions();
  }
 catch (  Exception e) {
    logger.debug("fail to get numeric function names from database metadata: " + e,e);
  }
  try {
    keywords+="," + metaData.getSystemFunctions();
  }
 catch (  Exception e) {
    logger.debug("fail to get system function names from database metadata: " + e,e);
  }
  try {
    keywords+="," + metaData.getTimeDateFunctions();
  }
 catch (  Exception e) {
    logger.debug("fail to get time date function names from database metadata: " + e,e);
  }
  keywords+="," + keywords.toLowerCase();
  StringTokenizer tok=new StringTokenizer(keywords,", ");
  while (tok.hasMoreTokens()) {
    completions.add(tok.nextToken());
  }
  return completions;
}
