{
  if (isEvaluated() == true)   return;
  if (src == Source.Text) {
    String tc="CREATE EXTERNAL TABLE " + name + "("+ schema.toHiveTableCreationQueryColumnPart()+ ") "+ "ROW FORMAT DELIMITED FIELDS TERMINATED BY '"+ split+ "' "+ "STORED AS TEXTFILE "+ "LOCATION '"+ location.toString()+ "'";
    logger.info("Execute " + tc);
    try {
      runtime.sql(tc);
      tableRDD=runtime.sql2rdd("select * from " + name);
      tableRDD.setName(name);
    }
 catch (    Exception e) {
      throw new ZeppelinRuntimeException(e);
    }
  }
 else   if (src == Source.SQL) {
    try {
      runtime.sql("CREATE VIEW " + name + " as "+ sql);
      tableRDD=runtime.sql2rdd("select * from " + name);
      tableRDD.setName(name);
      schema=new Schema(ColumnDesc.createSchema(tableRDD.schema()));
    }
 catch (    Exception e) {
      throw new ZeppelinRuntimeException(e);
    }
  }
 else   if (src == Source.Table) {
    try {
      tableRDD=runtime.sql2rdd("select * from " + name);
      tableRDD.setName(name);
      schema=new Schema(ColumnDesc.createSchema(tableRDD.schema()));
    }
 catch (    Exception e) {
      throw new ZeppelinRuntimeException(e);
    }
  }
 else   if (src == Source.RDD) {
    try {
      ColumnDesc.convertToSharkColumnDesc(schema.getColumns());
      List<shark.api.DataType> types=new LinkedList<shark.api.DataType>();
      List<String> fields=new LinkedList<String>();
      for (      ColumnDesc c : schema.getColumns()) {
        fields.add(c.name());
        types.add(c.type().toSharkType());
      }
      if (new RDDTableFunctions(rdd,JavaConversions.asScalaBuffer(types).toList()).saveAsTable(name,JavaConversions.asScalaBuffer(fields).toList())) {
        tableRDD=runtime.sql2rdd("select * from " + name);
        tableRDD.setName(name);
      }
 else {
        throw new ZeppelinRuntimeException("Can't convert");
      }
      tableRDD=runtime.sql2rdd("select * from " + name);
      tableRDD.setName(name);
    }
 catch (    Exception e) {
      throw new ZeppelinRuntimeException(e);
    }
  }
}
