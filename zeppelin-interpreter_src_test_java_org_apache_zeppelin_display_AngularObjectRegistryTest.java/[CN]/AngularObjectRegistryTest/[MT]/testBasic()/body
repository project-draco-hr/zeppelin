{
  final AtomicInteger onAdd=new AtomicInteger(0);
  final AtomicInteger onUpdate=new AtomicInteger(0);
  final AtomicInteger onRemove=new AtomicInteger(0);
  AngularObjectRegistry registry=new AngularObjectRegistry("intpId",new AngularObjectRegistryListener(){
    @Override public void onAdd(    String interpreterGroupId,    AngularObject object){
      onAdd.incrementAndGet();
    }
    @Override public void onUpdate(    String interpreterGroupId,    AngularObject object){
      onUpdate.incrementAndGet();
    }
    @Override public void onRemove(    String interpreterGroupId,    String name,    String noteId,    String paragraphId){
      onRemove.incrementAndGet();
    }
  }
);
  registry.add("name1","value1","note1",null);
  assertEquals(1,registry.getAll("note1",null).size());
  assertEquals(1,onAdd.get());
  assertEquals(0,onUpdate.get());
  registry.get("name1","note1",null).set("newValue");
  assertEquals(1,onUpdate.get());
  registry.remove("name1","note1",null);
  assertEquals(0,registry.getAll("note1",null).size());
  assertEquals(1,onRemove.get());
  assertEquals(null,registry.get("name1","note1",null));
  registry.add("name1","value11","note2",null);
  assertEquals("value11",registry.get("name1","note2",null).get());
  assertEquals(null,registry.get("name1","note1",null));
  registry.add("name1","global1",null,null);
  assertEquals("global1",registry.get("name1",null,null).get());
}
