{
  this.versionString=versionString;
  try {
    int pos=versionString.indexOf('-');
    String numberPart=versionString;
    if (pos > 0) {
      numberPart=versionString.substring(0,pos);
    }
    String versions[]=numberPart.split("\\.");
    int major=Integer.parseInt(versions[0]);
    int minor=Integer.parseInt(versions[1]);
    int patch=Integer.parseInt(versions[2]);
    version=Integer.parseInt(String.format("%d%02d%02d",major,minor,patch));
  }
 catch (  Exception e) {
    logger.error("Can not recognize Spark version " + versionString + ". Assume it's a future release",e);
    version=99999;
  }
}
