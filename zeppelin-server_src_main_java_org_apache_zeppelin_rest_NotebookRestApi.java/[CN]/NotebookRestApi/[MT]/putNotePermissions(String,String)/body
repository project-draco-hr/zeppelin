{
  HashMap<String,HashSet> permMap=gson.fromJson(req,new TypeToken<HashMap<String,HashSet>>(){
  }
.getType());
  Note note=notebook.getNote(noteId);
  String principal=SecurityUtils.getPrincipal();
  HashSet<String> roles=SecurityUtils.getRoles();
  LOG.info("Set permissions {} {} {} {} {}",noteId,principal,permMap.get("owners"),permMap.get("readers"),permMap.get("writers"));
  HashSet<String> userAndRoles=new HashSet<String>();
  userAndRoles.add(principal);
  userAndRoles.addAll(roles);
  if (!note.isOwner(userAndRoles)) {
    return new JsonResponse<>(Status.FORBIDDEN,ownerPermissionError(userAndRoles,note.getOwners())).build();
  }
  note.setOwners(permMap.get("owners"));
  note.setReaders(permMap.get("readers"));
  note.setWriters(permMap.get("writers"));
  LOG.debug("After set permissions {} {} {}",note.getOwners(),note.getReaders(),note.getWriters());
  note.persist();
  notebookServer.broadcastNote(note);
  return new JsonResponse<>(Status.OK).build();
}
