{
  List expectedResultOne=Arrays.asList(new InterpreterCompletion("cat","cat"),new InterpreterCompletion("chgrp","chgrp"),new InterpreterCompletion("chmod","chmod"),new InterpreterCompletion("chown","chown"),new InterpreterCompletion("copyFromLocal","copyFromLocal"),new InterpreterCompletion("copyToLocal","copyToLocal"),new InterpreterCompletion("count","count"),new InterpreterCompletion("createLineage","createLineage"));
  List expectedResultTwo=Arrays.asList(new InterpreterCompletion("copyFromLocal","copyFromLocal"),new InterpreterCompletion("copyToLocal","copyToLocal"),new InterpreterCompletion("count","count"));
  List expectedResultThree=Arrays.asList(new InterpreterCompletion("copyFromLocal","copyFromLocal"),new InterpreterCompletion("copyToLocal","copyToLocal"));
  List expectedResultNone=new ArrayList<String>();
  List<InterpreterCompletion> resultOne=alluxioInterpreter.completion("c",0);
  List<InterpreterCompletion> resultTwo=alluxioInterpreter.completion("co",0);
  List<InterpreterCompletion> resultThree=alluxioInterpreter.completion("copy",0);
  List<InterpreterCompletion> resultNotMatch=alluxioInterpreter.completion("notMatch",0);
  List<InterpreterCompletion> resultAll=alluxioInterpreter.completion("",0);
  Assert.assertEquals(expectedResultOne,resultOne);
  Assert.assertEquals(expectedResultTwo,resultTwo);
  Assert.assertEquals(expectedResultThree,resultThree);
  Assert.assertEquals(expectedResultNone,resultNotMatch);
  List allCompletionList=new ArrayList<>();
  for (  InterpreterCompletion ic : resultAll) {
    allCompletionList.add(ic.getName());
  }
  Assert.assertEquals(alluxioInterpreter.keywords,allCompletionList);
}
