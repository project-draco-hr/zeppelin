{
  if (to == null) {
    to=new Date();
  }
  if (from == null) {
    from=new Date(to.getTime() - (1000 * 60 * 60* 24* 7));
  }
  TreeMap<String,ZQLSession> found=new TreeMap<String,ZQLSession>();
  for (Date cur=to; cur.before(from) == false; cur=new Date(cur.getTime() - (1000 * 60 * 60))) {
    Path dir=new Path(sessionPersistBasePath + "/" + pathFormat.format(cur));
    try {
      if (fs.isDirectory(dir) == false)       continue;
    }
 catch (    IOException e) {
      logger.error("Can't scan dir " + dir,e);
    }
    FileStatus[] files=null;
    try {
      files=fs.listStatus(dir);
    }
 catch (    IOException e) {
      logger.error("Can't list dir " + dir,e);
      e.printStackTrace();
    }
    if (files == null)     continue;
    Arrays.sort(files,new Comparator<FileStatus>(){
      @Override public int compare(      FileStatus a,      FileStatus b){
        String aName=a.getPath().getName();
        String bName=b.getPath().getName();
        return bName.compareTo(aName);
      }
    }
);
    for (    FileStatus f : files) {
      ZQLSession session;
      try {
        session=load(f.getPath());
        found.put(session.getId(),session);
      }
 catch (      IOException e) {
        logger.error("Can't load session from path " + f.getPath(),e);
      }
      if (found.size() >= max)       break;
    }
    if (found.size() >= max)     break;
  }
  return found;
}
