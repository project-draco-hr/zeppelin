{
  LOG.info("testNoteJobs");
  Note note=ZeppelinServer.notebook.createNote(null);
  assertNotNull("can't create new note",note);
  note.setName("note for run test");
  Paragraph paragraph=note.addParagraph();
  Map config=paragraph.getConfig();
  config.put("enabled",true);
  paragraph.setConfig(config);
  paragraph.setText("%md This is test paragraph.");
  note.persist(null);
  String noteID=note.getId();
  note.runAll();
  int timeout=1;
  while (!paragraph.isTerminated()) {
    Thread.sleep(1000);
    if (timeout++ > 10) {
      LOG.info("testNoteJobs timeout job.");
      break;
    }
  }
  PostMethod postNoteJobs=httpPost("/notebook/job/" + noteID,"");
  assertThat("test notebook jobs run:",postNoteJobs,isAllowed());
  postNoteJobs.releaseConnection();
  DeleteMethod deleteNoteJobs=httpDelete("/notebook/job/" + noteID);
  assertThat("test notebook stop:",deleteNoteJobs,isAllowed());
  deleteNoteJobs.releaseConnection();
  Thread.sleep(1000);
  PostMethod postParagraph=httpPost("/notebook/job/" + noteID + "/"+ paragraph.getId(),"");
  assertThat("test paragraph run:",postParagraph,isAllowed());
  postParagraph.releaseConnection();
  Thread.sleep(1000);
  DeleteMethod deleteParagraph=httpDelete("/notebook/job/" + noteID + "/"+ paragraph.getId());
  assertThat("test paragraph stop:",deleteParagraph,isAllowed());
  deleteParagraph.releaseConnection();
  Thread.sleep(1000);
  ZeppelinServer.notebook.removeNote(note.getId(),null);
}
