{
  Map<String,String> body;
  GetMethod getSecurityTicket=httpGet("/security/ticket");
  getSecurityTicket.addRequestHeader("Origin","http://localhost");
  Map<String,Object> respSecurityTicket=gson.fromJson(getSecurityTicket.getResponseBodyAsString(),new TypeToken<Map<String,Object>>(){
  }
.getType());
  body=(Map<String,String>)respSecurityTicket.get("body");
  String username=body.get("principal");
  getSecurityTicket.releaseConnection();
  Note note1=ZeppelinServer.notebook.createNote(null);
  String jsonRequest="{\"title\": \"title1\", \"text\": \"ThisIsToTestSearchMethodWithPermissions 1\"}";
  PostMethod postNotebookText=httpPost("/notebook/" + note1.getId() + "/paragraph",jsonRequest);
  postNotebookText.releaseConnection();
  Note note2=ZeppelinServer.notebook.createNote(null);
  jsonRequest="{\"title\": \"title1\", \"text\": \"ThisIsToTestSearchMethodWithPermissions 2\"}";
  postNotebookText=httpPost("/notebook/" + note2.getId() + "/paragraph",jsonRequest);
  postNotebookText.releaseConnection();
  String jsonPermissions="{\"owners\":[\"" + username + "\"],\"readers\":[\""+ username+ "\"],\"writers\":[\""+ username+ "\"]}";
  PutMethod putPermission=httpPut("/notebook/" + note1.getId() + "/permissions",jsonPermissions);
  putPermission.releaseConnection();
  jsonPermissions="{\"owners\":[\"admin\"],\"readers\":[\"admin\"],\"writers\":[\"admin\"]}";
  putPermission=httpPut("/notebook/" + note2.getId() + "/permissions",jsonPermissions);
  putPermission.releaseConnection();
  GetMethod searchNotebook=httpGet("/notebook/search?q='ThisIsToTestSearchMethodWithPermissions'");
  searchNotebook.addRequestHeader("Origin","http://localhost");
  Map<String,Object> respSearchResult=gson.fromJson(searchNotebook.getResponseBodyAsString(),new TypeToken<Map<String,Object>>(){
  }
.getType());
  ArrayList searchBody=(ArrayList)respSearchResult.get("body");
  assertEquals("At-least one search results is there",true,searchBody.size() >= 1);
  for (int i=0; i < searchBody.size(); i++) {
    Map<String,String> searchResult=(Map<String,String>)searchBody.get(i);
    String userId=searchResult.get("id").split("/",2)[0];
    GetMethod getPermission=httpGet("/notebook/" + userId + "/permissions");
    getPermission.addRequestHeader("Origin","http://localhost");
    Map<String,Object> resp=gson.fromJson(getPermission.getResponseBodyAsString(),new TypeToken<Map<String,Object>>(){
    }
.getType());
    Map<String,ArrayList> permissions=(Map<String,ArrayList>)resp.get("body");
    ArrayList owners=permissions.get("owners");
    ArrayList readers=permissions.get("readers");
    ArrayList writers=permissions.get("writers");
    if (owners.size() != 0 && readers.size() != 0 && writers.size() != 0) {
      assertEquals("User has permissions  ",true,(owners.contains(username) || readers.contains(username) || writers.contains(username)));
    }
    getPermission.releaseConnection();
  }
  searchNotebook.releaseConnection();
  ZeppelinServer.notebook.removeNote(note1.getId(),null);
  ZeppelinServer.notebook.removeNote(note2.getId(),null);
}
