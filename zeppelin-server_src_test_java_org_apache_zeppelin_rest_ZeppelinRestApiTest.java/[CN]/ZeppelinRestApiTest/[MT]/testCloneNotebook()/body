{
  LOG.info("testCloneNotebook");
  Note note=ZeppelinServer.notebook.createNote(null);
  assertNotNull("can't create new note",note);
  note.setName("source note for clone");
  Paragraph paragraph=note.addParagraph();
  Map config=paragraph.getConfig();
  config.put("enabled",true);
  paragraph.setConfig(config);
  paragraph.setText("%md This is my new paragraph in my new note");
  note.persist(null);
  String sourceNoteID=note.getId();
  String noteName="clone Note Name";
  String jsonRequest="{\"name\":\"" + noteName + "\"}";
  PostMethod post=httpPost("/notebook/" + sourceNoteID,jsonRequest);
  LOG.info("testNotebookClone \n" + post.getResponseBodyAsString());
  assertThat("test notebook clone method:",post,isCreated());
  Map<String,Object> resp=gson.fromJson(post.getResponseBodyAsString(),new TypeToken<Map<String,Object>>(){
  }
.getType());
  String newNotebookId=(String)resp.get("body");
  LOG.info("newNotebookId:=" + newNotebookId);
  Note newNote=ZeppelinServer.notebook.getNote(newNotebookId);
  assertNotNull("Can not find new note by id",newNote);
  assertEquals("Compare note names",noteName,newNote.getName());
  assertEquals("Compare paragraphs count",note.getParagraphs().size(),newNote.getParagraphs().size());
  ZeppelinServer.notebook.removeNote(note.getId(),null);
  ZeppelinServer.notebook.removeNote(newNote.getId(),null);
  post.releaseConnection();
}
