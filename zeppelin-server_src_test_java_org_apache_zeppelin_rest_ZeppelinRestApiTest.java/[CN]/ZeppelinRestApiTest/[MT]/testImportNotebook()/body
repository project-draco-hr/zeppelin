{
  Map<String,Object> resp;
  String noteName="source note for import";
  LOG.info("testImortNotebook");
  Note note=ZeppelinServer.notebook.createNote();
  assertNotNull("can't create new note",note);
  note.setName(noteName);
  Paragraph paragraph=note.addParagraph();
  Map config=paragraph.getConfig();
  config.put("enabled",true);
  paragraph.setConfig(config);
  paragraph.setText("%md This is my new paragraph in my new note");
  note.persist();
  String sourceNoteID=note.getId();
  String oldJson=getNoteContent(sourceNoteID);
  PostMethod importPost=httpPost("/notebook/import/",oldJson);
  assertThat(importPost,isCreated());
  resp=gson.fromJson(importPost.getResponseBodyAsString(),new TypeToken<Map<String,Object>>(){
  }
.getType());
  String importId=(String)resp.get("body");
  assertNotNull("Did not get back a notebook id in body",importId);
  Note newNote=ZeppelinServer.notebook.getNote(importId);
  assertEquals("Compare note names",noteName,newNote.getName());
  assertEquals("Compare paragraphs count",note.getParagraphs().size(),newNote.getParagraphs().size());
  ZeppelinServer.notebook.removeNote(note.getId());
  ZeppelinServer.notebook.removeNote(newNote.getId());
  importPost.releaseConnection();
}
