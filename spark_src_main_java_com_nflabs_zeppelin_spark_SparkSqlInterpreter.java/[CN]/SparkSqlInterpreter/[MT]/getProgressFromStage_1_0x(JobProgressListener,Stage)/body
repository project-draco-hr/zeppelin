{
  int numTasks=stage.numTasks();
  int completedTasks=0;
  Method method;
  Object completedTaskInfo=null;
  try {
    method=sparkListener.getClass().getMethod("stageIdToTasksComplete");
    completedTaskInfo=JavaConversions.asJavaMap((HashMap<Object,Object>)method.invoke(sparkListener)).get(stage.id());
  }
 catch (  NoSuchMethodException|SecurityException e) {
    logger.error("Error while getting progress",e);
  }
catch (  IllegalAccessException e) {
    logger.error("Error while getting progress",e);
  }
catch (  IllegalArgumentException e) {
    logger.error("Error while getting progress",e);
  }
catch (  InvocationTargetException e) {
    logger.error("Error while getting progress",e);
  }
  if (completedTaskInfo != null) {
    completedTasks+=(int)completedTaskInfo;
  }
  List<Stage> parents=JavaConversions.asJavaList(stage.parents());
  if (parents != null) {
    for (    Stage s : parents) {
      int[] p=getProgressFromStage_1_0x(sparkListener,s);
      numTasks+=p[0];
      completedTasks+=p[1];
    }
  }
  return new int[]{numTasks,completedTasks};
}
