{
  if (initialized == true) {
    return;
  }
  RemoteInterpreterProcess interpreterProcess=getInterpreterProcess();
  final InterpreterGroup interpreterGroup=getInterpreterGroup();
  interpreterProcess.reference(interpreterGroup);
  interpreterProcess.setMaxPoolSize(Math.max(this.maxPoolSize,interpreterProcess.getMaxPoolSize()));
  String groupId=interpreterGroup.getId();
synchronized (interpreterProcess) {
    Client client=null;
    try {
      client=interpreterProcess.getClient();
    }
 catch (    Exception e1) {
      throw new InterpreterException(e1);
    }
    boolean broken=false;
    try {
      logger.info("Create remote interpreter {}",getClassName());
      property.put("zeppelin.interpreter.localRepo",localRepoPath);
      client.createInterpreter(groupId,noteId,getClassName(),(Map)property);
      if (!interpreterGroup.isAngularRegistryPushed()) {
        pushAngularObjectRegistryToRemote(client);
        interpreterGroup.setAngularRegistryPushed(true);
      }
    }
 catch (    TException e) {
      broken=true;
      throw new InterpreterException(e);
    }
 finally {
      interpreterProcess.releaseClient(client,broken);
    }
  }
  initialized=true;
}
