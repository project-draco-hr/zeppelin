{
synchronized (interpreterSettings) {
    List<InterpreterSetting> orderedSettings=new LinkedList<>();
    Map<String,List<InterpreterSetting>> groupNameInterpreterSettingMap=new HashMap<>();
    for (    InterpreterSetting interpreterSetting : interpreterSettings.values()) {
      String groupName=interpreterSetting.getGroup();
      if (!groupNameInterpreterSettingMap.containsKey(groupName)) {
        groupNameInterpreterSettingMap.put(groupName,new ArrayList<InterpreterSetting>());
      }
      groupNameInterpreterSettingMap.get(groupName).add(interpreterSetting);
    }
    for (    String groupName : interpreterGroupOrderList) {
      List<InterpreterSetting> interpreterSettingList=groupNameInterpreterSettingMap.remove(groupName);
      if (null != interpreterSettingList) {
        for (        InterpreterSetting interpreterSetting : interpreterSettingList) {
          orderedSettings.add(interpreterSetting);
        }
      }
    }
    List<InterpreterSetting> settings=new ArrayList<>();
    for (    List<InterpreterSetting> interpreterSettingList : groupNameInterpreterSettingMap.values()) {
      for (      InterpreterSetting interpreterSetting : interpreterSettingList) {
        settings.add(interpreterSetting);
      }
    }
    Collections.sort(settings,new Comparator<InterpreterSetting>(){
      @Override public int compare(      InterpreterSetting o1,      InterpreterSetting o2){
        return o1.getName().compareTo(o2.getName());
      }
    }
);
    orderedSettings.addAll(settings);
    return orderedSettings;
  }
}
