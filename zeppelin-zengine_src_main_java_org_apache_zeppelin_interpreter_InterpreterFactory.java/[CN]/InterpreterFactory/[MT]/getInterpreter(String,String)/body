{
  List<InterpreterSetting> settings=getInterpreterSettings(noteId);
  InterpreterSetting setting;
  Interpreter interpreter;
  if (settings == null || settings.size() == 0) {
    return null;
  }
  if (replName == null || replName.trim().length() == 0) {
    InterpreterSetting defaultSettings=getDefaultInterpreterSetting(settings);
    return createOrGetInterpreterList(noteId,defaultSettings).get(0);
  }
  String[] replNameSplit=replName.split("\\.");
  if (replNameSplit.length == 2) {
    String group=null;
    String name=null;
    group=replNameSplit[0];
    name=replNameSplit[1];
    setting=getInterpreterSettingByGroup(settings,group);
    if (null != setting) {
      interpreter=getInterpreter(noteId,setting,name);
      if (null != interpreter) {
        return interpreter;
      }
    }
    throw new InterpreterException(replName + " interpreter not found");
  }
 else {
    setting=getDefaultInterpreterSetting(settings);
    interpreter=getInterpreter(noteId,setting,replName);
    if (null != interpreter) {
      return interpreter;
    }
    setting=getInterpreterSettingByGroup(settings,replName);
    if (null != setting) {
      List<Interpreter> interpreters=createOrGetInterpreterList(noteId,setting);
      if (null != interpreters) {
        return interpreters.get(0);
      }
    }
  }
  if (DevInterpreter.isInterpreterName(replName)) {
    return getDevInterpreter();
  }
  return null;
}
