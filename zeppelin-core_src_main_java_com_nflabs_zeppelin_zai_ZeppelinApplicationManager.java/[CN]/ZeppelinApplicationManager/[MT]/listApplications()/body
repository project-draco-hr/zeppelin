{
  List<ZeppelinApplication> apps=new LinkedList<ZeppelinApplication>();
  Reflections reflections=new Reflections("");
  Set<Class<? extends ZeppelinApplication>> classes=reflections.getSubTypesOf(ZeppelinApplication.class);
  Iterator<Class<? extends ZeppelinApplication>> it=classes.iterator();
  while (it.hasNext()) {
    Class<? extends ZeppelinApplication> cls=it.next();
    if (cls.getName().equals(MetaApplication.class.getName())) {
      continue;
    }
    Constructor<? extends ZeppelinApplication> constructor=cls.getConstructor(ZeppelinRuntime.class);
    ZeppelinApplication app=constructor.newInstance(runtime);
    apps.add(app);
  }
  return apps;
}
