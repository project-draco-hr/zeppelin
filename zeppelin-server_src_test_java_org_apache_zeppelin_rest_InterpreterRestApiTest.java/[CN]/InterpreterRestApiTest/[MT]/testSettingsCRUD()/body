{
  String jsonRequest="{\"name\":\"md2\",\"group\":\"md\",\"properties\":{\"propname\":\"propvalue\"}," + "\"interpreterGroup\":[{\"class\":\"org.apache.zeppelin.markdown.Markdown\",\"name\":\"md\"}]," + "\"dependencies\":[]}";
  PostMethod post=httpPost("/interpreter/setting/",jsonRequest);
  LOG.info("testSettingCRUD create response\n" + post.getResponseBodyAsString());
  assertThat("test create method:",post,isCreated());
  Map<String,Object> resp=gson.fromJson(post.getResponseBodyAsString(),new TypeToken<Map<String,Object>>(){
  }
.getType());
  Map<String,Object> body=(Map<String,Object>)resp.get("body");
  String newSettingId=body.toString().split(",")[0].split("=")[1];
  post.releaseConnection();
  jsonRequest="{\"name\":\"md2\",\"group\":\"md\",\"properties\":{\"propname\":\"Otherpropvalue\"}," + "\"interpreterGroup\":[{\"class\":\"org.apache.zeppelin.markdown.Markdown\",\"name\":\"md\"}]," + "\"dependencies\":[]}";
  PutMethod put=httpPut("/interpreter/setting/" + newSettingId,jsonRequest);
  LOG.info("testSettingCRUD update response\n" + put.getResponseBodyAsString());
  assertThat("test update method:",put,isAllowed());
  put.releaseConnection();
  DeleteMethod delete=httpDelete("/interpreter/setting/" + newSettingId);
  LOG.info("testSettingCRUD delete response\n" + delete.getResponseBodyAsString());
  assertThat("Test delete method:",delete,isAllowed());
  delete.releaseConnection();
}
