{
  Interpreter intp=getInterpreter(className);
  InterpreterContext context=convert(interpreterContext);
  Scheduler scheduler=intp.getScheduler();
  InterpretJobListener jobListener=new InterpretJobListener();
  InterpretJob job=new InterpretJob(interpreterContext.getParagraphId(),"remoteInterpretJob_" + System.currentTimeMillis(),jobListener,JobProgressPoller.DEFAULT_INTERVAL_MSEC,intp,st,context);
  scheduler.submit(job);
  while (!job.isTerminated()) {
synchronized (jobListener) {
      try {
        jobListener.wait(1000);
      }
 catch (      InterruptedException e) {
      }
    }
  }
  InterpreterResult result;
  if (job.getStatus() == Status.ERROR) {
    result=new InterpreterResult(Code.ERROR,Job.getStack(job.getException()));
  }
 else {
    result=(InterpreterResult)job.getReturn();
  }
  return convert(result,context.getConfig(),context.getGui());
}
