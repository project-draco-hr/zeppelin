{
  tmpDir=new File(System.getProperty("java.io.tmpdir") + "/ZeppelinLTest_" + System.currentTimeMillis());
  tmpDir.mkdirs();
  new File(tmpDir,"conf").mkdirs();
  notebookDir=new File(tmpDir + "/notebook");
  notebookDir.mkdirs();
  System.setProperty(ConfVars.ZEPPELIN_HOME.getVarName(),tmpDir.getAbsolutePath());
  System.setProperty(ConfVars.ZEPPELIN_NOTEBOOK_DIR.getVarName(),notebookDir.getAbsolutePath());
  System.setProperty(ConfVars.ZEPPELIN_INTERPRETERS.getVarName(),"org.apache.zeppelin.interpreter.mock.MockInterpreter1,org.apache.zeppelin.interpreter.mock.MockInterpreter2");
  conf=ZeppelinConfiguration.create();
  this.schedulerFactory=new SchedulerFactory();
  MockInterpreter1.register("mock1","org.apache.zeppelin.interpreter.mock.MockInterpreter1");
  MockInterpreter2.register("mock2","org.apache.zeppelin.interpreter.mock.MockInterpreter2");
  depResolver=new DependencyResolver(tmpDir.getAbsolutePath() + "/local-repo");
  factory=new InterpreterFactory(conf,new InterpreterOption(false),null,null,depResolver);
  SearchService search=mock(SearchService.class);
  notebookRepo=new VFSNotebookRepo(conf);
  notebook=new Notebook(conf,notebookRepo,schedulerFactory,factory,this,search);
}
