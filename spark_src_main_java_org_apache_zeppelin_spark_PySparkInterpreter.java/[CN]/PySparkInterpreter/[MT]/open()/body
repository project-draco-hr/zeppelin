{
  DepInterpreter depInterpreter=getDepInterpreter();
  URL[] urls=new URL[0];
  if (depInterpreter != null) {
    SparkDependencyContext depc=depInterpreter.getDependencyContext();
    if (depc != null) {
      List<File> files=depc.getFiles();
      List<URL> urlList=new LinkedList<URL>();
      if (files != null) {
        for (        File f : files) {
          try {
            urlList.add(f.toURI().toURL());
          }
 catch (          MalformedURLException e) {
            logger.error("Error",e);
          }
        }
        urls=urlList.toArray(urls);
      }
    }
  }
  ClassLoader oldCl=Thread.currentThread().getContextClassLoader();
  try {
    URLClassLoader newCl=new URLClassLoader(urls,oldCl);
    Thread.currentThread().setContextClassLoader(newCl);
    createGatewayServerAndStartScript();
  }
 catch (  Exception e) {
    logger.error("Error",e);
    throw new InterpreterException(e);
  }
 finally {
    Thread.currentThread().setContextClassLoader(oldCl);
  }
}
