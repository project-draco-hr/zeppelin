{
  String[] completionSeqCharaters={" ","\n","\t"};
  int completionEndPosition=cursor;
  int completionStartPosition=cursor;
  int indexOfReverseSeqPostion=cursor;
  String resultCompletionText="";
  String completionScriptText="";
  try {
    completionScriptText=text.substring(0,cursor);
  }
 catch (  Exception e) {
    logger.error(e.toString());
    return null;
  }
  completionEndPosition=completionScriptText.length();
  String tempReverseCompletionText=new StringBuilder(completionScriptText).reverse().toString();
  for (  String seqCharacter : completionSeqCharaters) {
    indexOfReverseSeqPostion=tempReverseCompletionText.indexOf(seqCharacter);
    if (indexOfReverseSeqPostion < completionStartPosition && indexOfReverseSeqPostion > 0) {
      completionStartPosition=indexOfReverseSeqPostion;
    }
  }
  if (completionStartPosition == completionEndPosition) {
    completionStartPosition=0;
  }
 else {
    completionStartPosition=completionEndPosition - completionStartPosition;
  }
  resultCompletionText=completionScriptText.substring(completionStartPosition,completionEndPosition);
  return resultCompletionText;
}
