{
  ScriptEngine engine=getRubyScriptEngine();
  StringBuffer rubyScript=new StringBuffer();
  SimpleBindings bindings=new SimpleBindings();
  engine.setBindings(bindings,ScriptContext.ENGINE_SCOPE);
  rubyScript.append("require 'erb'\n");
  rubyScript.append("class Zeppelin\n" + "  def initialize(a, p)\n" + "    @a = a\n"+ "    @p = {}\n"+ "    p.each{|key,value|@p[key]=value}\n"+ "  end\n"+ "  def param(key)\n"+ "    @p[key]\n"+ "  end\n"+ "  def " + Q.PREV_VAR_NAME + "\n"+ "    @a\n"+ "  end\n"+ "end\n");
  bindings.put(Q.PREV_VAR_NAME,query);
  bindings.put("params",params);
  rubyScript.append("z = Zeppelin.new($" + Q.PREV_VAR_NAME + ", $params)\n");
  try {
    FSDataInputStream ins=fs.open(erbFile);
    BufferedReader br=new BufferedReader(new InputStreamReader(ins));
    String line=null;
    rubyScript.append("erb = \"\"\n");
    while ((line=br.readLine()) != null) {
      rubyScript.append("erb += \"" + line + "\"\n");
    }
    ins.close();
  }
 catch (  IOException e1) {
    throw new ZException(e1);
  }
  rubyScript.append("$e = ERB.new(erb).result(binding)\n");
  try {
    logger.debug("rubyScript to run : \n" + rubyScript.toString());
    engine.eval(rubyScript.toString(),bindings);
  }
 catch (  ScriptException e) {
    throw new ZException(e);
  }
  String q=(String)engine.getBindings(ScriptContext.ENGINE_SCOPE).get("e");
  String tableCreation=null;
  if (name() == null) {
    tableCreation="";
  }
 else {
    if (isCache()) {
      tableCreation="CREATE TABLE " + name() + " AS ";
    }
 else {
      tableCreation="CREATE VIEW " + name() + " AS ";
    }
  }
  return tableCreation + q;
}
