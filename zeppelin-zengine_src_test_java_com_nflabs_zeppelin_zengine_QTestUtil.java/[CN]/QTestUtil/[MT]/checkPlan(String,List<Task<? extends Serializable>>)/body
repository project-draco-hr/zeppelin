{
  if (tasks != null) {
    File planDir=new File(outDir,"plan");
    String planFile=outPath(planDir.toString(),tname + ".xml");
    File outf=null;
    outf=new File(logDir);
    outf=new File(outf,tname.concat(".xml"));
    FileOutputStream ofs=new FileOutputStream(outf);
    for (    Task<? extends Serializable> plan : tasks) {
      Utilities.serializeTasks(plan,ofs);
    }
    String[] patterns=new String[]{"<java version=\".*\" class=\"java.beans.XMLDecoder\">","<string>.*/tmp/.*</string>","<string>file:.*</string>","<string>pfile:.*</string>","<string>[0-9]{10}</string>","<string>/.*/warehouse/.*</string>"};
    maskPatterns(patterns,outf.getPath());
    String[] cmdArray=new String[]{"diff","-b",outf.getPath(),planFile};
    System.out.println(org.apache.commons.lang.StringUtils.join(cmdArray,' '));
    Process executor=Runtime.getRuntime().exec(cmdArray);
    StreamPrinter outPrinter=new StreamPrinter(executor.getInputStream(),null,SessionState.getConsole().getChildOutStream());
    StreamPrinter errPrinter=new StreamPrinter(executor.getErrorStream(),null,SessionState.getConsole().getChildErrStream());
    outPrinter.start();
    errPrinter.start();
    int exitVal=executor.waitFor();
    if (exitVal != 0 && overWrite) {
      System.out.println("Overwriting results");
      String cmdLine="cp " + outf.getPath() + " "+ planFile;
      executor=Runtime.getRuntime().exec(cmdLine);
      exitVal=executor.waitFor();
    }
    return exitVal;
  }
 else {
    throw new Exception("Plan is null");
  }
}
