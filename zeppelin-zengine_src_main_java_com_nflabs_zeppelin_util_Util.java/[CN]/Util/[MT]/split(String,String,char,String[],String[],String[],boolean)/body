{
  List<String> splits=new ArrayList<String>();
  String curString="";
  int ignoreBlockIndex=-1;
  boolean escape=false;
  int lastEscapeOffset=-1;
  for (int i=0; i < str.length(); i++) {
    char c=str.charAt(i);
    if (c == escapeChar && escape == false) {
      escape=true;
      continue;
    }
    if (escape == true) {
      if (escapeSeq.indexOf(c) < 0) {
        curString+=escapeChar;
      }
      curString+=c;
      escape=false;
      lastEscapeOffset=i;
      continue;
    }
    if (ignoreBlockIndex >= 0) {
      curString+=c;
      if (curString.substring(lastEscapeOffset + 1).endsWith(blockEnd[ignoreBlockIndex])) {
        ignoreBlockIndex=-1;
        continue;
      }
    }
 else {
      boolean splitted=false;
      for (      String splitter : splitters) {
        if (splitter.compareTo(str.substring(i,Math.min(i + splitter.length(),str.length() - 1))) == 0) {
          splits.add(curString);
          if (includeSplitter == true) {
            splits.add(splitter);
          }
          curString="";
          lastEscapeOffset=-1;
          i+=splitter.length() - 1;
          splitted=true;
          break;
        }
      }
      if (splitted == true) {
        continue;
      }
      curString+=c;
      for (int b=0; b < blockStart.length; b++) {
        if (curString.substring(lastEscapeOffset + 1).endsWith(blockStart[b]) == true) {
          ignoreBlockIndex=b;
        }
      }
    }
  }
  if (curString.length() > 0)   splits.add(curString);
  return splits.toArray(new String[]{});
}
