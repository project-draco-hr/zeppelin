{
  List<InterpreterSetting> settings=getInterpreterSettings();
  if (settings == null || settings.size() == 0) {
    return null;
  }
  if (replName == null || replName.trim().length() == 0) {
    return settings.get(0).getInterpreterGroup().getFirst();
  }
  if (Interpreter.registeredInterpreters == null) {
    return null;
  }
  String[] replNameSplit=replName.split("\\.");
  String group=null;
  String name=null;
  if (replNameSplit.length == 2) {
    group=replNameSplit[0];
    name=replNameSplit[1];
    Interpreter.RegisteredInterpreter registeredInterpreter=Interpreter.registeredInterpreters.get(group + "." + name);
    if (registeredInterpreter == null || registeredInterpreter.getClassName() == null) {
      throw new InterpreterException(replName + " interpreter not found");
    }
    String interpreterClassName=registeredInterpreter.getClassName();
    for (    InterpreterSetting setting : settings) {
      InterpreterGroup intpGroup=setting.getInterpreterGroup();
      for (      Interpreter interpreter : intpGroup) {
        if (interpreterClassName.equals(interpreter.getClassName())) {
          return interpreter;
        }
      }
    }
  }
 else {
    InterpreterGroup intpGroup=settings.get(0).getInterpreterGroup();
    for (    Interpreter interpreter : intpGroup) {
      RegisteredInterpreter intp=Interpreter.findRegisteredInterpreterByClassName(interpreter.getClassName());
      if (intp == null) {
        continue;
      }
      if (intp.getName().equals(replName)) {
        return interpreter;
      }
    }
    for (    InterpreterSetting setting : settings) {
      intpGroup=setting.getInterpreterGroup();
      Interpreter interpreter=intpGroup.get(0);
      RegisteredInterpreter intp=Interpreter.findRegisteredInterpreterByClassName(interpreter.getClassName());
      if (intp == null) {
        continue;
      }
      if (intp.getGroup().equals(replName)) {
        return interpreter;
      }
    }
  }
  throw new InterpreterException(replName + " interpreter not found");
}
