{
  IndexedSeq<ClassPath<AbstractFile>> entries=((MergedClassPath<AbstractFile>)platform.classPath()).entries();
  List<ClassPath<AbstractFile>> cp=new LinkedList<ClassPath<AbstractFile>>();
  for (int i=0; i < entries.size(); i++) {
    cp.add(entries.apply(i));
  }
  for (  URL url : urls) {
    AbstractFile file;
    if ("file".equals(url.getProtocol())) {
      File f=new File(url.getPath());
      if (f.isDirectory()) {
        file=AbstractFile.getDirectory(scala.reflect.io.File.jfile2path(f));
      }
 else {
        file=AbstractFile.getFile(scala.reflect.io.File.jfile2path(f));
      }
    }
 else {
      file=AbstractFile.getURL(url);
    }
    ClassPath<AbstractFile> newcp=platform.classPath().context().newClassPath(file);
    if (cp.contains(newcp) == false) {
      cp.add(newcp);
    }
  }
  return new MergedClassPath(scala.collection.JavaConversions.asScalaBuffer(cp).toIndexedSeq(),platform.classPath().context());
}
