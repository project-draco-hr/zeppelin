{
synchronized (referenceCount) {
    int r=referenceCount.decrementAndGet();
    if (r == 0) {
      logger.info("shutdown interpreter process");
      remoteInterpreterEventPoller.shutdown();
      Client client=null;
      try {
        client=getClient();
        client.shutdown();
      }
 catch (      Exception e) {
        logger.info("Exception in RemoteInterpreterProcess while synchronized dereference, can " + "safely ignore exception while client.shutdown() may terminates remote process",e);
      }
 finally {
        if (client != null) {
          releaseBrokenClient(client);
        }
      }
      clientPool.clear();
      clientPool.close();
      long startTime=System.currentTimeMillis();
      while (System.currentTimeMillis() - startTime < connectTimeout) {
        if (this.isRunning()) {
          try {
            Thread.sleep(500);
          }
 catch (          InterruptedException e) {
            logger.error("Exception in RemoteInterpreterProcess while synchronized dereference " + "Thread.sleep",e);
          }
        }
 else {
          break;
        }
      }
      if (isRunning()) {
        logger.info("kill interpreter process");
        watchdog.destroyProcess();
      }
      executor=null;
      watchdog=null;
      running=false;
      logger.info("Remote process terminated");
    }
    return r;
  }
}
