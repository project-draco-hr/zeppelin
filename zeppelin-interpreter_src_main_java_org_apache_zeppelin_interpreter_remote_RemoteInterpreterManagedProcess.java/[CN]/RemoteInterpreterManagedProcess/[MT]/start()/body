{
  try {
    port=RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces();
  }
 catch (  IOException e1) {
    throw new InterpreterException(e1);
  }
  CommandLine cmdLine=CommandLine.parse(interpreterRunner);
  cmdLine.addArgument("-d",false);
  cmdLine.addArgument(interpreterDir,false);
  cmdLine.addArgument("-p",false);
  cmdLine.addArgument(Integer.toString(port),false);
  cmdLine.addArgument("-l",false);
  cmdLine.addArgument(localRepoDir,false);
  executor=new DefaultExecutor();
  watchdog=new ExecuteWatchdog(ExecuteWatchdog.INFINITE_TIMEOUT);
  executor.setWatchdog(watchdog);
  try {
    Map procEnv=EnvironmentUtils.getProcEnvironment();
    procEnv.putAll(env);
    logger.info("Run interpreter process {}",cmdLine);
    executor.execute(cmdLine,procEnv,this);
    running=true;
  }
 catch (  IOException e) {
    running=false;
    throw new InterpreterException(e);
  }
  long startTime=System.currentTimeMillis();
  while (System.currentTimeMillis() - startTime < getConnectTimeout()) {
    if (RemoteInterpreterUtils.checkIfRemoteEndpointAccessible("localhost",port)) {
      break;
    }
 else {
      try {
        Thread.sleep(500);
      }
 catch (      InterruptedException e) {
        logger.error("Exception in RemoteInterpreterProcess while synchronized reference " + "Thread.sleep",e);
      }
    }
  }
}
